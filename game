package practice;

import java.util.Scanner;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Random;

public class TicTacToe {

	static ArrayList<Integer> playerPositions = new ArrayList<Integer>();
	static ArrayList<Integer> cpuPositions = new ArrayList<Integer>();

	 
	public static void main(String[] args)
	{
	  char[][] gameBoard = {{' ','|',' ','|',' '},
			  				{'-','+','-','+','-'},
			  				{' ','|',' ','|',' '},
			  				{'-','+','-','+','-'},
			  				{' ','|',' ','|',' '}
	  					   };
	
	 Scanner sc = new Scanner(System.in);
	  printGameBoard(gameBoard);

	while(true)
	{
	  int pos = sc.nextInt();
	  while(playerPositions.contains(pos)|| cpuPositions.contains(pos))
	  {
		  System.out.println("Position already taken!! Enter new ");
		  pos = sc.nextInt();
	  }
	  placePiece(gameBoard,pos,"player");
	  Random rand = new Random();
	  int cpuPos = rand.nextInt(9)+1;
	  while(playerPositions.contains(cpuPos)|| cpuPositions.contains(cpuPos))
	  {
		  System.out.println("Position already taken!! Enter new ");
		  cpuPos = rand.nextInt(9)+1;
	  }
	 
	  placePiece(gameBoard,cpuPos,"cpu");
	  printGameBoard(gameBoard);
	String result =  checkWinner();
	System.out.print(result);
	}  

	
	}
	public static void printGameBoard(char[][] gameBoard)
	{
		for(char[] r:gameBoard)
		{
			for(char c: r)
			{
				System.out.print(c);
			}
			System.out.println("");
			
		}	
	}
	public static void placePiece(char[][] gameBoard, int pos, String user)
	{
		char symbol = ' ';
		if(user.contentEquals("player"))
		{
			symbol = 'X';
			playerPositions.add(pos);
		}else if(user.contentEquals("cpu"))
				{
					symbol = 'O';
					cpuPositions.add(pos);
				}
		  switch(pos)
		  {
		  	case 1:
			  gameBoard[0][0] = symbol;
			  break;
		  	case 2:
			  gameBoard[0][2] = symbol;
			  break;
		  	case 3:
			  gameBoard[0][4] = symbol;
			  break;
		  	case 4:
			  gameBoard[2][0] = symbol;
			  break;
		  	case 5:
			  gameBoard[2][2] = symbol;
			  break;
		  	case 6:
			  gameBoard[2][4] = symbol;
			  break;
		  	case 7:
			  gameBoard[4][0] = symbol;
			  break;
		  	case 8:
			  gameBoard[4][2] = symbol;
			  break;
		  	case 9:
			  gameBoard[4][4] = symbol;
			  break;	  
			default:
				break;
		  }
		  printGameBoard(gameBoard);
		
	}
    public static String checkWinner()
    {
    	List topRow = Arrays.asList(1,2,3);
    	List midRow = Arrays.asList(4,5,6);
    	List bottomRow = Arrays.asList(7,8,9);
    	List leftCol = Arrays.asList(1,4,7);
    	List midCol = Arrays.asList(2,5,8);
    	List bottomCol = Arrays.asList(3,6,9);
    	List cross1 = Arrays.asList(1,5,9);
    	List cross2 = Arrays.asList(3,5,7);
    	
    	List<List> winning  = new ArrayList<List>();
    	winning.add(topRow);
    	winning.add(midRow);
    	winning.add(bottomRow);
    	winning.add(leftCol);
    	winning.add(midCol);
    	winning.add(bottomCol);
    	winning.add(cross1);
    	winning.add(cross2);
    	
    	for(List l:winning)
    	{
    		if(playerPositions.containsAll(l))
    		{
    			return "Congratulations !!!";
    		}else if(cpuPositions.containsAll(l))
    		{
    			return "Soryy You Lost the Game !!!";
    		}else if(playerPositions.size() + cpuPositions.size() == 9)
    		{
    			return "Thats a Draww!!!!";
    		}
    			
    	}
    	return "";
    }
}
